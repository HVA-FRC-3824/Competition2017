// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3824.Competition2017.commands;

import org.usfirst.frc3824.Competition2017.Constants;

import edu.wpi.first.wpilibj.command.CommandGroup;

/**
 *
 */
public class AutonomousGearPlaceCenter extends CommandGroup
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public AutonomousGearPlaceCenter(String startPosition) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
		// Add Commands here:
		// e.g. addSequential(new Command1());
		// addSequential(new Command2());
		// these will run in order.

		// To run multiple commands at the same time,
		// use addParallel()
		// e.g. addParallel(new Command1());
		// addSequential(new Command2());
		// Command1 and Command2 will run in parallel.

		// A command group will require all of the subsystems that each member
		// would require.
		// e.g. if Command1 requires chassis, and Command2 requires arm,
		// a CommandGroup containing them would require both the chassis and the
		// arm.
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
		
    	if (startPosition.equals("Center"))
    	{
	    	// Drive up to lift
	    	addSequential(new PlaceGearPosition());
			addSequential(new ChassisDriveDistance(Constants.CENTER_STRIGHT_DISTANCE, -0.6, false));
			
    	} else if (startPosition.equals("Left"))
    	{
    		// Drive and turn towards gear
    		addSequential(new ChassisDriveDistance(Constants.LEFT_STRAIGHT_DISTANCE, -0.8, false));  // 80
   			addSequential(new ChassisTurnAngle(Constants.LEFT_TURN_ANGLE, 0.0, false));       // 65	
    		
    	} else if (startPosition.equals("Right"))
    	{
    		// Drive and turn towards gear
    		addSequential(new ChassisDriveDistance(Constants.RIGHT_STRAIGHT_DISTANCE, -0.8, false));  //  80
   			addSequential(new ChassisTurnAngle(Constants.RIGHT_TURN_ANGLE, 0.0, false));      // -60
    	}
    	
    	// Move gear onto lift
    	addSequential(new ChassisDriveRange(Constants.DRIVE_RANGE_DISTANCE, -0.3, false));
   		addSequential(new Delay(0.2));
  			
   		// Drop Gear off and Back Up
  		addSequential(new SetGearGripOpen());
    	addSequential(new Delay(0.2));
    	addSequential(new ChassisDriveDistance(Constants.BACKUP_DISTANCE, 0.3, false));
    	addSequential(new Delay(0.2));
    	addSequential(new SetGearGripClosed());
//		
//		// Drive back
//		addSequential(new ChassisDriveDistance(48.0, 0.5, false));
//		
//		// Run away to cross baseline
//		addSequential(new ChassisTurnAngle(-75.0, 0.0, false));
//		addSequential(new ChassisDriveDistance(60.0, -0.8, false));
//		addSequential(new ChassisTurnAngle(60.0, 0.0, false));
//		addSequential(new ChassisDriveDistance(60.0, -0.8, false));
	}
}
